index = 1
for (r in regions_filter){
index = index + 1 #iterate index
new_df = forecaster(starting_year =  2020,
starting_value = filter(hist_vals, region == r, year==2020)$value,
years = years,
growth_rate = filter(growth_rates,region == r)$gr,
region = r)
#change 2045 and 2050 values to threshold for affected years
if (new_df$value[6] != new_df$value[5]){ #affected years grow until end
new_df <- new_df %>%
mutate(value = if_else(year %in% c(2045, 2050), as.numeric(threshold), as.numeric(value)))
}
#add to data list
df_list[[index]] <- new_df
}
scen_data = do.call(rbind, df_list)
#name scenario
scen_data <- scen_data %>%
#convert value column to numeric
mutate(value = as.numeric(value)) %>%
#add column to identify scenario
mutate(scenario = "gdp_suf_low")%>%
#add identifier at beginning of df
relocate(scenario, .before = 1)
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("GDP: Sufficitarian")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
####----SCENARIO 5 GDP lim----####
#countries below threshold stay constant, highest reach threshold by 2040
#GET GROWTH RATES
##set growth rates individually via end value
##set end values in 2050; 0 means no change to present day
##set threshold
threshold = 20000
end_val <- c(
threshold,#Based on scen data; North America; primarily the United States of America and…
threshold,#Pacific OECD
threshold,#Eastern and Western Europe (i.e., the EU28)
0,#Countries of centrally-planned Asia; primarily China
0,#Reforming Economies of Eastern Europe and the Former Sovi…
0,#Countries of Latin America and the Caribbean
0,#Countries of the Middle East; Iran, Iraq, Israel, Saudi A…
0,#Countries of South Asia; primarily India
0#Countries of Sub-Saharan Africa
)
#add growth rates
growth_rates <- hist_vals %>%
filter(year == 2020) %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years)-2)))
#FORECAST
#create empty df
df_list <- list()
##add starting values
df_list[[1]] <- hist_vals %>% filter(year==2020)
##add starting index
index = 1
for (r in regions_filter){
index = index + 1 #iterate index
new_df = forecaster(starting_year =  2020,
starting_value = filter(hist_vals, region == r, year==2020)$value,
years = years,
growth_rate = filter(growth_rates,region == r)$gr,
region = r)
#change 2045 and 2050 values to threshold for affected years
if (new_df$value[6] != new_df$value[5]){ #affected years grow until end
new_df <- new_df %>%
mutate(value = if_else(year %in% c(2045, 2050), as.numeric(threshold), as.numeric(value)))
}
#add to data list
df_list[[index]] <- new_df
}
scen_data = do.call(rbind, df_list)
#name scenario
scen_data <- scen_data %>%
#convert value column to numeric
mutate(value = as.numeric(value)) %>%
#add column to identify scenario
mutate(scenario = "gdp_lim_low")%>%
#add identifier at beginning of df
relocate(scenario, .before = 1)
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("GDP: Limitarian")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
# Chunk 13: load nutrition data
#starting vals from FAO
#unit =  kCal meat consumption per day in 2018
hist_vals <- data.frame(
region = c("Africa","China+","Europe","India+","Latin America","Middle East",
"North America", "Pacific OECD","Reformed Economies"),
year = rep(2018, 9),
value = c(71.54330,480.77560,339.87086, 24.12279,354.55484, 130.56674,
444.13868,247.16975,270.95007)
)
years <- c(2022, 2026, 2030, 2034, 2038, 2042, 2046, 2050)
# Chunk 14: nutrition high treshold
####----SCENARIO 1 NUTRITION aggu----####
#AGGREGATE UTILITARIAN
#GET GROWTH RATES
end_val <- hist_vals %>% arrange(desc(value))%>% mutate(value = value+100) %>% select(value)
growth_rates <- hist_vals %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val$value == 0,
0,
LG_calculator(starting_value = value,
end_value = end_val$value,
n = length(years))))
#FORECAST
scen_data <- run_forecast(historic_values = hist_vals,
starting_year = 2018,
list_of_growth_rates = growth_rates,
list_of_years = years,
list_of_regions = hist_vals$region,
scenario_name = "nutrition_agg_high")
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Aggregate Uti")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
#Add same scenario also for low scenario
scen_data <- scen_data %>% mutate(scenario = "nutrition_agg_low")
export_df <- rbind(export_df, scen_data)
####----SCENARIO 2 NUTRITION prio----####
#PRIORITARIAN
#GET GROWTH RATES
end_val <- c(
0,#China+
0,#North America
0,#Latin America
0,#Europe
300,#Reformed Economies
285,#Pacific OECD
240,#Middle East
200,#Africa
170#India+
)
growth_rates <- hist_vals %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years))))
#FORECAST
scen_data <- run_forecast(historic_values = hist_vals,
starting_year = 2018,
list_of_growth_rates = growth_rates,
list_of_years = years,
list_of_regions = hist_vals$region,
scenario_name = "nutrition_pri_high")
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Prioritarian")+
ylim(0, 700)
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
#Add same scenario also for low scenario
scen_data <- scen_data %>% mutate(scenario = "nutrition_pri_low")
export_df <- rbind(export_df, scen_data)
####----SCENARIO 3 NUTRITION egal----####
#Convergence at 210
#GET GROWTH RATES
end_val <- c(
210,#China+
210,#North America
210,#Latin America
210,#Europe
210,#Reformed Economies
210,#Pacific OECD
210,#Middle East
210,#Africa
210#India+
)
growth_rates <- hist_vals %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years))))
#FORECAST
scen_data <- run_forecast(historic_values = hist_vals,
starting_year = 2018,
list_of_growth_rates = growth_rates,
list_of_years = years,
list_of_regions = hist_vals$region,
scenario_name = "nutrition_ega_high")
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Egalitarian High")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
####----SCENARIO 4 NUTRITION suf----####
#countries above threshold stay constant, lowest reach threshold by 2040
#GET GROWTH RATES
##set growth rates individually via end value
##set end values in 2050; 0 means no change to present day
##set threshold
threshold = 210
end_val <- c(
0,#China+
0,#North America
0,#Latin America
0,#Europe
0,#Reformed Economies
0,#Pacific OECD
threshold,#Middle East
threshold,#Africa
threshold#India+
)
#add growth rates
growth_rates <- hist_vals %>%
filter(year == 2018) %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years)-2)))
#FORECAST
#create empty df
df_list <- list()
##add starting values
df_list[[1]] <- hist_vals %>% filter(year==2018)
##add starting index
index = 1
for (r in unique(hist_vals$region)){
index = index + 1 #iterate index
new_df = forecaster(starting_year =  2018,
starting_value = filter(hist_vals, region == r, year==2018)$value,
years = years,
growth_rate = filter(growth_rates,region == r)$gr,
region = r)
if (new_df$value[6] != new_df$value[5]){ #affected years grow until end
new_df <- new_df %>%
mutate(value = if_else(year %in% c(2046, 2050), as.numeric(threshold), as.numeric(value)))
}
#add to data list
df_list[[index]] <- new_df
}
scen_data = do.call(rbind, df_list)
#name scenario
scen_data <- scen_data %>%
#convert value column to numeric
mutate(value = as.numeric(value)) %>%
#add column to identify scenario
mutate(scenario = "nutrition_suf_high")%>%
#add identifier at beginning of df
relocate(scenario, .before = 1)
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Sufficitarian High")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
####----SCENARIO 5 NUTRITION lim----####
#countries below threshold stay constant, highest reach threshold by 2040
#GET GROWTH RATES
##set growth rates individually via end value
##set end values in 2050; 0 means no change to present day
##set threshold
threshold = 210
end_val <- c(
threshold,#China+
threshold,#North America
threshold,#Latin America
threshold,#Europe
threshold,#Reformed Economies
threshold,#Pacific OECD
0,#Middle East
0,#Africa
0#India+
)
#add growth rates
growth_rates <- hist_vals %>%
filter(year == 2018) %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years)-2)))
#FORECAST
#create empty df
df_list <- list()
##add starting values
df_list[[1]] <- hist_vals %>% filter(year==2018)
##add starting index
index = 1
for (r in unique(hist_vals$region)){
index = index + 1 #iterate index
new_df = forecaster(starting_year =  2018,
starting_value = filter(hist_vals, region == r, year==2018)$value,
years = years,
growth_rate = filter(growth_rates,region == r)$gr,
region = r)
#change 2045 and 2050 values to threshold for affected years
if (new_df$value[6] != new_df$value[5]){ #affected years grow until end
new_df <- new_df %>%
mutate(value = if_else(year %in% c(2046, 2050), as.numeric(threshold), as.numeric(value)))
}
#add to data list
df_list[[index]] <- new_df
}
scen_data = do.call(rbind, df_list)
#name scenario
scen_data <- scen_data %>%
#convert value column to numeric
mutate(value = as.numeric(value)) %>%
#add column to identify scenario
mutate(scenario = "nutrition_lim_high")%>%
#add identifier at beginning of df
relocate(scenario, .before = 1)
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Limitarian High")+
ylim(0, 500)
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
# Chunk 15: nutrition low treshold
####----SCENARIO 3 NUTRITION egal----####
#Convergence at 90
#GET GROWTH RATES
end_val <- c(
90,#China+
90,#North America
90,#Latin America
90,#Europe
90,#Reformed Economies
90,#Pacific OECD
90,#Middle East
90,#Africa
90#India+
)
growth_rates <- hist_vals %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years))))
#FORECAST
scen_data <- run_forecast(historic_values = hist_vals,
starting_year = 2018,
list_of_growth_rates = growth_rates,
list_of_years = years,
list_of_regions = hist_vals$region,
scenario_name = "nutrition_ega_low")
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Egalitarian Low")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
####----SCENARIO 4 NUTRITION suf----####
#countries above threshold stay constant, lowest reach threshold by 2040
#GET GROWTH RATES
##set growth rates individually via end value
##set end values in 2050; 0 means no change to present day
##set threshold
threshold = 90
end_val <- c(
0,#China+
0,#North America
0,#Latin America
0,#Europe
0,#Reformed Economies
0,#Pacific OECD
0,#Middle East
threshold,#Africa
threshold#India+
)
#add growth rates
growth_rates <- hist_vals %>%
filter(year == 2018) %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years)-2)))
#FORECAST
#create empty df
df_list <- list()
##add starting values
df_list[[1]] <- hist_vals %>% filter(year==2018)
##add starting index
index = 1
for (r in unique(hist_vals$region)){
index = index + 1 #iterate index
new_df = forecaster(starting_year =  2018,
starting_value = filter(hist_vals, region == r, year==2018)$value,
years = years,
growth_rate = filter(growth_rates,region == r)$gr,
region = r)
if (new_df$value[6] != new_df$value[5]){ #affected years grow until end
new_df <- new_df %>%
mutate(value = if_else(year %in% c(2046, 2050), as.numeric(threshold), as.numeric(value)))
}
#add to data list
df_list[[index]] <- new_df
}
scen_data = do.call(rbind, df_list)
#name scenario
scen_data <- scen_data %>%
#convert value column to numeric
mutate(value = as.numeric(value)) %>%
#add column to identify scenario
mutate(scenario = "nutrition_suf_low")%>%
#add identifier at beginning of df
relocate(scenario, .before = 1)
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Sufficitarian Low")
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
####----SCENARIO 5 NUTRITION lim----####
#countries below threshold stay constant, highest reach threshold by 2040
#GET GROWTH RATES
##set growth rates individually via end value
##set end values in 2050; 0 means no change to present day
##set threshold
threshold = 90
end_val <- c(
threshold,#China+
threshold,#North America
threshold,#Latin America
threshold,#Europe
threshold,#Reformed Economies
threshold,#Pacific OECD
threshold,#Middle East
0,#Africa
0#India+
)
#add growth rates
growth_rates <- hist_vals %>%
filter(year == 2018) %>%
arrange(desc(value)) %>%
mutate(end_val = end_val) %>%
mutate(gr = if_else(end_val == 0,
0,
CAGR_calculator(starting_value = value,
end_value = end_val,
n = length(years)-2)))
#FORECAST
#create empty df
df_list <- list()
##add starting values
df_list[[1]] <- hist_vals %>% filter(year==2018)
##add starting index
index = 1
for (r in unique(hist_vals$region)){
index = index + 1 #iterate index
new_df = forecaster(starting_year =  2018,
starting_value = filter(hist_vals, region == r, year==2018)$value,
years = years,
growth_rate = filter(growth_rates,region == r)$gr,
region = r)
#change 2045 and 2050 values to threshold for affected years
if (new_df$value[6] != new_df$value[5]){ #affected years grow until end
new_df <- new_df %>%
mutate(value = if_else(year %in% c(2046, 2050), as.numeric(threshold), as.numeric(value)))
}
#add to data list
df_list[[index]] <- new_df
}
scen_data = do.call(rbind, df_list)
#name scenario
scen_data <- scen_data %>%
#convert value column to numeric
mutate(value = as.numeric(value)) %>%
#add column to identify scenario
mutate(scenario = "nutrition_lim_low")%>%
#add identifier at beginning of df
relocate(scenario, .before = 1)
scen_data %>%
ggplot(aes(x=year, y=value, group=region, color=region))+
geom_line()+
ggtitle("Nutrition: Limitarian Low")+
ylim(0, 500)
#ADD TO EXPORT DF
export_df <- rbind(export_df, scen_data)
write.csv(export_df,
#IIASA
#"C:\\Users\\scheifinger\\OneDrive - IIASA\\Interactive Tools\\output.csv",
#Home
"C:\\Users\\schei\\OneDrive - IIASA\\Interactive Tools\\Scenario Archetypes\\output.csv",
row.names = FALSE)
